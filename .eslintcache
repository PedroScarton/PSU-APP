[{"D:\\Proyectos\\universidad\\psuapp\\src\\index.js":"1","D:\\Proyectos\\universidad\\psuapp\\src\\reportWebVitals.js":"2","D:\\Proyectos\\universidad\\psuapp\\src\\App.js":"3","D:\\Proyectos\\universidad\\psuapp\\src\\Start\\pages\\Start.js":"4","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\FormElements\\Button.js":"5","D:\\Proyectos\\universidad\\psuapp\\src\\Auth\\pages\\Register.js":"6","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\Navigation\\appBar.js":"7","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\FormElements\\Input.js":"8","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\util\\validators.js":"9","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\form-hook.js":"10","D:\\Proyectos\\universidad\\psuapp\\src\\Auth\\pages\\Login.js":"11","D:\\Proyectos\\universidad\\psuapp\\src\\Start\\pages\\Lobby.js":"12","D:\\Proyectos\\universidad\\psuapp\\src\\Start\\components\\LobbyHeader.js":"13","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Questionarie.js":"14","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Statement.js":"15","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Question.js":"16","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Resume.js":"17","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Card.js":"18","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Solutionary.js":"19","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Modal.js":"20","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Backdrop.js":"21","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Solution.js":"22","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Test.js":"23","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\context\\auth-context.js":"24","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\auth-hook.js":"25","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\LoadingSpinner.js":"26","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\http-hook.js":"27","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\ErrorModal.js":"28","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Cronometro.js":"29","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\Math\\Math.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1367,"mtime":1607826725916,"results":"34","hashOfConfig":"32"},{"size":672,"mtime":1607819278657,"results":"35","hashOfConfig":"32"},{"size":867,"mtime":1607719155720,"results":"36","hashOfConfig":"32"},{"size":3867,"mtime":1607815906517,"results":"37","hashOfConfig":"32"},{"size":645,"mtime":1607796612342,"results":"38","hashOfConfig":"32"},{"size":4677,"mtime":1607727028021,"results":"39","hashOfConfig":"32"},{"size":1708,"mtime":1607111060929,"results":"40","hashOfConfig":"32"},{"size":1671,"mtime":1607113556245,"results":"41","hashOfConfig":"32"},{"size":3126,"mtime":1607805340580,"results":"42","hashOfConfig":"32"},{"size":661,"mtime":1607804632974,"results":"43","hashOfConfig":"32"},{"size":796,"mtime":1607369479868,"results":"44","hashOfConfig":"32"},{"size":6779,"mtime":1607811869112,"results":"45","hashOfConfig":"32"},{"size":2563,"mtime":1607892310480,"results":"46","hashOfConfig":"32"},{"size":1101,"mtime":1607811311615,"results":"47","hashOfConfig":"32"},{"size":1872,"mtime":1607815658435,"results":"48","hashOfConfig":"32"},{"size":247,"mtime":1607718224164,"results":"49","hashOfConfig":"32"},{"size":3595,"mtime":1607727076988,"results":"50","hashOfConfig":"32"},{"size":1420,"mtime":1607800860525,"results":"51","hashOfConfig":"32"},{"size":289,"mtime":1607722134952,"results":"52","hashOfConfig":"32"},{"size":2271,"mtime":1607726999852,"results":"53","hashOfConfig":"32"},{"size":5988,"mtime":1607811871381,"results":"54","hashOfConfig":"32"},{"size":210,"mtime":1607735063311,"results":"55","hashOfConfig":"32"},{"size":1642,"mtime":1607817535664,"results":"56","hashOfConfig":"32"},{"size":346,"mtime":1607799356522,"results":"57","hashOfConfig":"32"},{"size":1477,"mtime":1607796653882,"results":"58","hashOfConfig":"32"},{"size":403,"mtime":1607800843682,"results":"59","hashOfConfig":"32"},{"size":892,"mtime":1607805903286,"results":"60","hashOfConfig":"32"},{"size":592,"mtime":1607885127648,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"8xvjgk",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Proyectos\\universidad\\psuapp\\src\\index.js",[],["128","129"],"D:\\Proyectos\\universidad\\psuapp\\src\\reportWebVitals.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\App.js",["130","131","132","133","134","135"],"import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\nimport Start from './Start/pages/Start';\nimport Register from './Auth/pages/Register';\nimport Login from './Auth/pages/Login';\nimport Lobby from './Start/pages/Lobby';\nimport Test from './Questionnaire/pages/Test';\nimport Statement from './Questionnaire/components/Statement';\nimport { AuthContext } from './Shared/context/auth-context';\nimport { useAuth } from './Shared/hooks/auth-hook';\nimport './App.css';\n\nconst App = () => {\n\n  const { token, userId, login, logout } = useAuth();\n\n  let routes;\n\n  if (!token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Start} />\n        <Route path=\"/signup\" exact component={Register} />\n        <Route path=\"/login\" exact component={Login} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact component={Lobby} />\n        <Route path=\"/test\" exact component={Test} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  }\n\n  // return (\n  //   <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\n  //     <Router>\n  //       {routes}\n  //     </Router>\n  //   </AuthContext.Provider>\n  // );\n  return (\n    <Statement />\n  )\n}\n\n\nexport default App;","D:\\Proyectos\\universidad\\psuapp\\src\\Start\\pages\\Start.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\FormElements\\Button.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Auth\\pages\\Register.js",["136","137"],"import React, { useContext } from 'react';\n\nimport { VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from '../../Shared/util/validators'\nimport { useForm } from '../../Shared/hooks/form-hook'\nimport { useHttpClient } from '../../Shared/hooks/http-hook';\nimport { AuthContext } from '../../Shared/context/auth-context';\n\nimport AppBar from '../../Shared/components/Navigation/appBar';\nimport Input from '../../Shared/components/FormElements/Input';\nimport ErrorModal from '../../Shared/components/UIElements/ErrorModal';\nimport Button from '../../Shared/components/FormElements/Button';\nimport LoadingSpinner from '../../Shared/components/UIElements/LoadingSpinner';\nimport './Register.css'\n\nconst Register = () => {\n\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const inputs = {\n        nombre: {\n            value: '',\n            isValid: false\n        },\n        apellido: {\n            value: '',\n            isValid: false\n        },\n        correo: {\n            value: '',\n            isValid: false\n        },\n        contraseña: {\n            value: '',\n            isValid: false\n        }\n    }\n    const [formState, inputHandler] = useForm(inputs, false);\n\n    const submitHandler = async (event) => {\n        event.preventDefault();\n        try {\n            const responseData = await sendRequest(\n                process.env.REACT_APP_BACKEND_URL + '/user',\n                'POST',\n                JSON.stringify({\n                    firstname: formState.inputs.nombre.value,\n                    lastname: formState.inputs.apellido.value,\n                    email: formState.inputs.correo.value,\n                    password: formState.inputs.contraseña.value\n                }),\n                {\n                    'Content-type': 'application/json'\n                }\n            );\n        } catch (err) {\n\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <AppBar />\n            <ErrorModal error={error} onClear={clearError} />\n            <main className=\"register\">\n                {\n                    isLoading && (\n                        <div className=\"loadingSpinner--center\">\n                            <LoadingSpinner />\n                        </div>\n                    )\n                }\n                <form onSubmit={submitHandler}>\n                    <div className=\"register_inputs\">\n                        <Input\n                            id=\"nombre\"\n                            label=\"Nombre\"\n                            type=\"text\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            onInput={inputHandler}\n                        />\n                        <Input\n                            id=\"apellido\"\n                            label=\"Apellido\"\n                            type=\"text\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            onInput={inputHandler}\n                        />\n                        <Input\n                            id=\"correo\"\n                            label=\"Correo\"\n                            type=\"text\"\n                            validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n                            onInput={inputHandler}\n                        />\n                        <Input\n                            id=\"contraseña\"\n                            label=\"Contraseña\"\n                            type=\"password\"\n                            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\n                            onInput={inputHandler}\n                        />\n                    </div>\n                    <Button type=\"submit\">Aceptar</Button>\n                </form>\n            </main>\n\n        </React.Fragment>\n    );\n}\n\nexport default Register;","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\Navigation\\appBar.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\FormElements\\Input.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\util\\validators.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\form-hook.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Auth\\pages\\Login.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Start\\pages\\Lobby.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Start\\components\\LobbyHeader.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Questionarie.js",["138","139"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport Statement from '../components/Statement';\r\nimport Question from '../components/Question';\r\nimport Button from '../../Shared/components/FormElements/Button';\r\nimport AppBar from '../../Shared/components/Navigation/appBar';\r\nimport Cronometro from '../components/Cronometro';\r\nimport './Questionarie.css';\r\n\r\nconst DUMMY_QUESTION = {\r\n    id: 1,\r\n    statement: [\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n        '<img src={} alt=\"\"/>',\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n    ],\r\n    option1: 'Esta es la opción 1',\r\n    option2: 'Esta es la opción 2',\r\n    option3: 'Esta es la opción 3',\r\n    option4: 'Esta es la opción 4',\r\n    option5: 'Esta es la opción 5',\r\n    difficulty: \"MEDIUM\",\r\n    answer: {\r\n        id: 1,\r\n        correctOption: 2,\r\n        description: [\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n            '<img/>',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n        ]\r\n    }\r\n\r\n}\r\n\r\nconst options = [\r\n    DUMMY_QUESTION.option1,\r\n    DUMMY_QUESTION.option2,\r\n    DUMMY_QUESTION.option3,\r\n    DUMMY_QUESTION.option4,\r\n    DUMMY_QUESTION.option5\r\n]\r\n\r\nconst Questionarie = (props) => {\r\n\r\n    const [question, setQuestion] = useState(null);\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [last, setLast] = useState(false);\r\n    const [time, setTime] = useState(0);\r\n    const [option, setOption] = useState(null);\r\n    const [actulQuestion, setActualQuestion] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.ensayo) {\r\n            setQuestion(props.ensayo[0]);\r\n        }\r\n    }, [props.ensayo])\r\n\r\n    useEffect(() => {\r\n        if (question && props.ensayo[2].id === question.id) {\r\n            setLast(true);\r\n        } else {\r\n            setLast(false);\r\n        }\r\n    }, [question, props.ensayo])\r\n\r\n    // useEffect(() => {\r\n    //     const interval = setInterval(() => {\r\n    //         setTime(seconds => seconds + 1);\r\n    //     }, 1000);\r\n    //     return () => clearInterval(interval);\r\n    // }, [setTime])\r\n\r\n    const getOptions = () => {\r\n        const options = [\r\n            question.option1,\r\n            question.option2,\r\n            question.option3,\r\n            question.option4,\r\n            question.option5\r\n        ]\r\n        return options;\r\n    }\r\n\r\n    const questionSelectedHandler = (value) => {\r\n        setOption(value);\r\n        setIsSelected(true);\r\n    }\r\n\r\n    const nextQuestionHandler = (event) => {\r\n        event.preventDefault()\r\n        //encuentro el indice de la pregunta en el arreglo de preguntas\r\n        const questionIndex = props.ensayo.findIndex(item => item.id === question.id);\r\n\r\n        //actualizo la respuesta para la pregunta actual\r\n        question.selected = option;\r\n\r\n        //copio el ensayo en un nuevo objeto por seguridad y guardo en este objeto la pregunta con su respuesta actualizada en la posición donde debe ir\r\n        const newQuestions = props.ensayo;\r\n        newQuestions[questionIndex] = question;\r\n\r\n        //actulizo el objeto de preguntas global para test\r\n        props.updateQuestions(newQuestions, time);\r\n\r\n        //reiniciamos valores\r\n        setIsSelected(false);\r\n        setOption(null);\r\n\r\n        //cambio la pregunta y el numero del app bar\r\n        setQuestion(props.ensayo[actulQuestion + 1]);\r\n        setActualQuestion(prevState => prevState + 1);\r\n    }\r\n\r\n    const previusQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        //debemos obtener el valor de la pregunta que se esta accediendo\r\n        const questionIndex = props.ensayo.findIndex(item => item.id === question.id);\r\n\r\n        //copio la pregunta anterior\r\n        const nextQuestion = props.ensayo[questionIndex - 1];\r\n\r\n        //copio el valor de la opción seleccionada por el usuario\r\n        const nextOption = nextQuestion.selected;\r\n\r\n\r\n        //enviarle el valor a los inputs y colocarlo como valor actual y que esta seleccionado algo\r\n        setIsSelected(true);\r\n        setOption(nextOption);\r\n\r\n        //cambio la pregunta y el numero de la app bar\r\n        setQuestion(props.ensayo[actulQuestion - 1]);\r\n        setActualQuestion(prevState => prevState - 1);\r\n    }\r\n\r\n    const endTestHandler = (event) => {\r\n        event.preventDefault()\r\n        //actualizo el stage para cambiar de pagina\r\n        props.nextStage('resume');\r\n    }\r\n\r\n    // let last = false;\r\n    // if (DUMMY_QUESTION[-1].id === question.id) {\r\n    //     last = true;\r\n    // }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar time>\r\n                <p>{actulQuestion + 1}/20</p>\r\n                <Cronometro time={time} />\r\n            </AppBar>\r\n            {\r\n                question && (\r\n                    <main className=\"questionarie\">\r\n                        <form onSubmit={(event) => event.preventDefault()}>\r\n                            <div className=\"questionarie__questions\">\r\n                                <Statement question={'Si P = 1,76 ¿Cuál es el valor de 10P?'} />\r\n                                <Question question={question} options={getOptions()} questionSelected={questionSelectedHandler} />\r\n                            </div>\r\n                            <div className=\"questionarie__buttons\">\r\n                                <Button\r\n                                    type=\"text\"\r\n                                    disabled={actulQuestion === 0}\r\n                                    onClick={previusQuestionHandler}\r\n                                    inverse\r\n                                    size=\"150px\">\r\n                                    Anterior\r\n                                </Button>\r\n                                <Button\r\n                                    type=\"text\"\r\n                                    disabled={!isSelected}\r\n                                    onClick={last ? endTestHandler : nextQuestionHandler}\r\n                                    size=\"150px\">\r\n                                    {last ? 'Finalizar' : 'Siguiente'}\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    </main>\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Questionarie;","D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Statement.js",["140","141","142"],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Question.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Resume.js",["143","144","145","146","147","148","149","150","151","152","153","154"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport AppBar from '../../Shared/components/Navigation/appBar';\r\nimport Clock from '../../Assets/Icons/clock.svg';\r\nimport Button from '../../Shared/components/FormElements/Button';\r\nimport Card from '../../Shared/components/UIElements/Card'\r\n\r\nimport './Resume.css';\r\n\r\nconst Resume = (props) => {\r\n\r\n    const [score, setScore] = useState(0);\r\n    const [correct, setCorrect] = useState(0);\r\n    const [wrong, setWrong] = useState(0);\r\n    const [notAnswered, setNotAnswered] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.ensayo, props.time])\r\n\r\n    const getScore = (correct, wrong, notAnswered) => {\r\n\r\n    }\r\n\r\n    const getCorrect = (questions) => {\r\n\r\n    }\r\n\r\n    const getWrong = (questions) => {\r\n\r\n    }\r\n\r\n    const getnotAnswered = (questions) => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar time>\r\n                <p>20/20</p>\r\n                <div className=\"appBar_clock\">\r\n                    <p>5:55</p>\r\n                    <img src={Clock} alt=\"\" />\r\n                </div>\r\n            </AppBar>\r\n            <main className=\"resume__main\">\r\n                <Card className=\"resume--card\">\r\n                    <h3>Resumen</h3>\r\n                    <div className=\"resume--data\">\r\n                        <p><span>Puntaje: </span>{props.score}</p>\r\n                        <p><span>Correctas: </span>{props.correct}</p>\r\n                        <p><span>Incorrectas: </span>{props.wrong}</p>\r\n                        <p><span>Sin responder: </span>{props.notAnswered}</p>\r\n                        <p><span>Tiempo total: </span>{props.totalTime}</p>\r\n                    </div>\r\n                </Card>\r\n                <Button to={\"/solutions\"}>Ver soluciones</Button>\r\n            </main>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Resume;","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Card.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Solutionary.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Modal.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\Backdrop.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Solution.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\pages\\Test.js",["155","156","157","158"],"import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { useHttpClient } from '../../Shared/hooks/http-hook';\r\nimport { AuthContext } from '../../Shared/context/auth-context';\r\n\r\nimport Questionnaire from './Questionarie';\r\nimport Resume from './Resume';\r\nimport Solutionary from './Solutionary'\r\nimport ErrorModal from '../../Shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../Shared/components/UIElements/LoadingSpinner';\r\n\r\nconst DUMMY_QUESTIONS = [\r\n    {\r\n        id: 1,\r\n        statement: [\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n            '<img src={} alt=\"\"/>',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n        ],\r\n        option1: 'Esta es la opción 1',\r\n        option2: 'Esta es la opción 2',\r\n        option3: 'Esta es la opción 3',\r\n        option4: 'Esta es la opción 4',\r\n        option5: 'Esta es la opción 5',\r\n        difficulty: \"MEDIUM\",\r\n        answer: {\r\n            id: 1,\r\n            correctOption: 2,\r\n            description: [\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n                '<img/>',\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n            ]\r\n        }\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        statement: [\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n            '<img src={} alt=\"\"/>',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n        ],\r\n        option1: 'Esta es la opción 1',\r\n        option2: 'Esta es la opción 2',\r\n        option3: 'Esta es la opción 3',\r\n        option4: 'Esta es la opción 4',\r\n        option5: 'Esta es la opción 5',\r\n        difficulty: \"MEDIUM\",\r\n        answer: {\r\n            id: 1,\r\n            correctOption: 2,\r\n            description: [\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n                '<img/>',\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n            ]\r\n        }\r\n\r\n    },\r\n    {\r\n        id: 3,\r\n        statement: [\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n            '<img src={} alt=\"\"/>',\r\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n        ],\r\n        option1: 'Esta es la opción 1',\r\n        option2: 'Esta es la opción 2',\r\n        option3: 'Esta es la opción 3',\r\n        option4: 'Esta es la opción 4',\r\n        option5: 'Esta es la opción 5',\r\n        difficulty: \"MEDIUM\",\r\n        answer: {\r\n            id: 1,\r\n            correctOption: 2,\r\n            description: [\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero',\r\n                '<img/>',\r\n                'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas blandit sapien metus, in faucibus sem rutrum malesuada. Vivamus eleifend justo libero'\r\n            ]\r\n        }\r\n\r\n    }\r\n]\r\n\r\nconst Test = () => {\r\n\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const [stage, setStage] = useState('');\r\n    const [questions, setQuestions] = useState(null);\r\n    const [totalTime, setTotalTime] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // const getEnsayo = async () => {\r\n\r\n        // }\r\n        const response = {\r\n            ensayo: true\r\n        };\r\n        if (response.ensayo) {\r\n            setStage('ensayo')\r\n        }\r\n    }, [setStage]);\r\n\r\n    const nextStageHandler = (value) => {\r\n        setStage(value)\r\n    }\r\n\r\n    const updateQuestionsHandler = (value, time) => {\r\n        setQuestions(value)\r\n        setTotalTime(time);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {\r\n                isLoading && (\r\n                    <div className=\"loadingSpinner--center\">\r\n                        <LoadingSpinner />\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                stage === 'ensayo' && (\r\n                    <Questionnaire\r\n                        ensayo={DUMMY_QUESTIONS}\r\n                        updateQuestions={updateQuestionsHandler}\r\n                        nextStage={nextStageHandler} />\r\n                )\r\n            }\r\n            {\r\n                stage === 'resume' && (\r\n                    <Resume\r\n                        ensayo={DUMMY_QUESTIONS}\r\n                        updateQuestions={updateQuestionsHandler}\r\n                        nextStage={nextStageHandler} />\r\n                )\r\n            }\r\n            {\r\n                stage === 'solutions' && (\r\n                    <Solutionary\r\n                        ensayo={DUMMY_QUESTIONS}\r\n                        updateQuestions={updateQuestionsHandler} />\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default Test;","D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\context\\auth-context.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\auth-hook.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\LoadingSpinner.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\hooks\\http-hook.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\UIElements\\ErrorModal.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Questionnaire\\components\\Cronometro.js",[],"D:\\Proyectos\\universidad\\psuapp\\src\\Shared\\components\\Math\\Math.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":27,"nodeType":"165","messageId":"166","endLine":2,"endColumn":33},{"ruleId":"163","severity":1,"message":"167","line":10,"column":10,"nodeType":"165","messageId":"166","endLine":10,"endColumn":21},{"ruleId":"163","severity":1,"message":"168","line":16,"column":18,"nodeType":"165","messageId":"166","endLine":16,"endColumn":24},{"ruleId":"163","severity":1,"message":"169","line":16,"column":26,"nodeType":"165","messageId":"166","endLine":16,"endColumn":31},{"ruleId":"163","severity":1,"message":"170","line":16,"column":33,"nodeType":"165","messageId":"166","endLine":16,"endColumn":39},{"ruleId":"163","severity":1,"message":"171","line":30,"column":5,"nodeType":"165","messageId":"166","endLine":30,"endColumn":11},{"ruleId":"163","severity":1,"message":"172","line":17,"column":11,"nodeType":"165","messageId":"166","endLine":17,"endColumn":15},{"ruleId":"163","severity":1,"message":"173","line":43,"column":19,"nodeType":"165","messageId":"166","endLine":43,"endColumn":31},{"ruleId":"163","severity":1,"message":"174","line":35,"column":7,"nodeType":"165","messageId":"166","endLine":35,"endColumn":14},{"ruleId":"163","severity":1,"message":"175","line":48,"column":18,"nodeType":"165","messageId":"166","endLine":48,"endColumn":25},{"ruleId":"163","severity":1,"message":"176","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":56,"column":43,"nodeType":"179","messageId":"180","endLine":56,"endColumn":44,"suggestions":"181"},{"ruleId":"177","severity":1,"message":"178","line":56,"column":96,"nodeType":"179","messageId":"180","endLine":56,"endColumn":97,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"183","line":12,"column":12,"nodeType":"165","messageId":"166","endLine":12,"endColumn":17},{"ruleId":"163","severity":1,"message":"184","line":12,"column":19,"nodeType":"165","messageId":"166","endLine":12,"endColumn":27},{"ruleId":"163","severity":1,"message":"185","line":13,"column":12,"nodeType":"165","messageId":"166","endLine":13,"endColumn":19},{"ruleId":"163","severity":1,"message":"186","line":13,"column":21,"nodeType":"165","messageId":"166","endLine":13,"endColumn":31},{"ruleId":"163","severity":1,"message":"187","line":14,"column":12,"nodeType":"165","messageId":"166","endLine":14,"endColumn":17},{"ruleId":"163","severity":1,"message":"188","line":14,"column":19,"nodeType":"165","messageId":"166","endLine":14,"endColumn":27},{"ruleId":"163","severity":1,"message":"189","line":15,"column":12,"nodeType":"165","messageId":"166","endLine":15,"endColumn":23},{"ruleId":"163","severity":1,"message":"190","line":15,"column":25,"nodeType":"165","messageId":"166","endLine":15,"endColumn":39},{"ruleId":"163","severity":1,"message":"191","line":21,"column":11,"nodeType":"165","messageId":"166","endLine":21,"endColumn":19},{"ruleId":"163","severity":1,"message":"192","line":25,"column":11,"nodeType":"165","messageId":"166","endLine":25,"endColumn":21},{"ruleId":"163","severity":1,"message":"193","line":29,"column":11,"nodeType":"165","messageId":"166","endLine":29,"endColumn":19},{"ruleId":"163","severity":1,"message":"194","line":33,"column":11,"nodeType":"165","messageId":"166","endLine":33,"endColumn":25},{"ruleId":"163","severity":1,"message":"172","line":89,"column":11,"nodeType":"165","messageId":"166","endLine":89,"endColumn":15},{"ruleId":"163","severity":1,"message":"195","line":90,"column":31,"nodeType":"165","messageId":"166","endLine":90,"endColumn":42},{"ruleId":"163","severity":1,"message":"196","line":93,"column":12,"nodeType":"165","messageId":"166","endLine":93,"endColumn":21},{"ruleId":"163","severity":1,"message":"197","line":94,"column":12,"nodeType":"165","messageId":"166","endLine":94,"endColumn":21},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'AuthContext' is defined but never used.","'userId' is assigned a value but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.","'routes' is assigned a value but never used.","'auth' is assigned a value but never used.","'responseData' is assigned a value but never used.","'options' is assigned a value but never used.","'setTime' is assigned a value but never used.","'Prueba' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["200","201"],["202","203"],"'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'correct' is assigned a value but never used.","'setCorrect' is assigned a value but never used.","'wrong' is assigned a value but never used.","'setWrong' is assigned a value but never used.","'notAnswered' is assigned a value but never used.","'setNotAnswered' is assigned a value but never used.","'getScore' is assigned a value but never used.","'getCorrect' is assigned a value but never used.","'getWrong' is assigned a value but never used.","'getnotAnswered' is assigned a value but never used.","'sendRequest' is assigned a value but never used.","'questions' is assigned a value but never used.","'totalTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"204","fix":"205","desc":"206"},{"messageId":"207","fix":"208","desc":"209"},{"messageId":"204","fix":"210","desc":"206"},{"messageId":"207","fix":"211","desc":"209"},"removeEscape",{"range":"212","text":"213"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"214","text":"215"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"216","text":"213"},{"range":"217","text":"215"},[1937,1938],"",[1937,1937],"\\",[1990,1991],[1990,1990]]